plugins {
    id 'java'
    id 'application'
    id 'com.jfrog.bintray' version '1.8.4'
    id "org.beryx.runtime" version "1.12.4"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'maven-publish'
    id 'idea'
}

group 'org.doddle-owl'
version = '21.12.1'
mainClassName = 'org.doddle_owl.DODDLE_OWL'
sourceCompatibility = targetCompatibility = '11'

project.ext {
    artifactId = 'doddle-owl'
    defaultEncoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

wrapper {
    gradleVersion = '7.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
}

tasks.withType(JavaExec) {
    systemProperty 'file.encoding', 'UTF-8'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'org.doddle_owl.DODDLE_OWL'
    }
}

idea {
    module {
        inheritOutputDirs = true
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.desktop', 'java.logging', 'java.xml', 'java.sql']
    imageDir = file("$buildDir/doddle-owl-${version}")
    imageZip = file("$buildDir/doddle-owl-${version}.zip")

    jpackage {
        // Windows and macOS
        outputDir = 'my-packaging'
        mainJar = "doddle-owl-${version}.jar"
        imageName = "doddle-owl-${version}"
        skipInstaller = false
        installerName = "doddle-owl"
        // macOS
//        jpackageHome = '/Library/Java/JavaVirtualMachines/jdk-16.0.1.jdk/Contents/Home'
//        imageOptions = ['--verbose', '--icon', './src/main/resources/images/doddle-owl.icns']
        // Windows
        jpackageHome = 'C:/Program Files/Java/jdk-17.0.1'
        installerType = 'msi'
        imageOptions = ['--icon', './src/main/resources/images/doddle-owl.ico']
        installerOptions = ['--vendor', 'Takeshi Morita', '--win-shortcut']
    }

}

tasks.runtime.doLast {
    copy {
        from('./README.md')
        into("$buildDir/doddle-owl-${version}")
    }
    copy {
        from('./README.ja.md')
        into("$buildDir/doddle-owl-${version}")
    }
    copy {
        from('./LICENSE')
        into("$buildDir/doddle-owl-${version}")
    }
    copy {
        from('./src/main/resources/jpwn_dict_1.1/')
        into("$buildDir/doddle-owl-${version}/ontologies/jpwn_dict_1.1/")
    }
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'org.doddle_owl.DODDLE_OWL'
    }
    archiveFileName = "doddle-owl-${version}.jar"
    exclude 'jpwn_dict_1.1/'
}

dependencies {
    implementation 'com.formdev:flatlaf:1.1.2'
    implementation 'org.xerial:sqlite-jdbc:3.34.0'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.apache.pdfbox:pdfbox:2.0.23'
    implementation 'net.sf.extjwnl:extjwnl:2.0.3'
    implementation 'net.sf.extjwnl:extjwnl-data-wn31:1.2'
    implementation 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'
    implementation 'org.apache.poi:poi-ooxml:3.7'
    implementation 'edu.stanford.nlp:stanford-parser:3.9.2'
    implementation 'org.apache.jena:apache-jena-libs:4.0.0'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.optimaize.languagedetector:language-detector:0.6'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId = 'org.doddle-owl'
            artifactId = 'doddle-owl'

            from components.java
            pom {
                name = 'DODDLE-OWL'
                description = 'a Domain Ontology rapiD DeveLopment Environment - OWL extension'
                url = 'http://doddle-owl.org/'
                licenses {
                    license {
                        name = 'GNU GENERAL PUBLIC LICENSE, Version 3'
                        url = 'http://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 't-morita'
                        name = 'Takeshi Morita'
                        email = 'morita@it.aoyama.ac.jp'
                    }
                }
            }
        }
    }
}

def siteUrl = 'https://doddle-owl.org/'
def githubUrl = 'https://github.com/doddle-owl/doddle-owl'
bintray {
    user = project.getProperty('bintray_user')
    key = project.getProperty('bintray_api_key')
    publications = ['MyPublication']
    override = true
    pkg {
        repo = 'maven'
        name = project.group + ':' + project.ext.artifactId
        userOrg = 'doddle-owl'
        licenses = ['GPL']
        websiteUrl = siteUrl
        vcsUrl = githubUrl + '.git'
        issueTrackerUrl = githubUrl + '/issues'
        version {
            name = project.version
        }
    }
}
